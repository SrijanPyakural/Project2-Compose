# docker-compose.yml
# Jenkins (custom image with Docker CLI) + Docker-in-Docker (DinD) over TLS
# - Run the setup wizard manually on first boot (no JCasC here)
# - Named volumes: Jenkins home + Docker layer cache

name: project2-compose

services:
  dind:
    image: docker:27-dind
    container_name: dind
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=/certs                # enable TLS certificates
    networks:
      jenkins:
        aliases: [docker]                        # Jenkins reaches daemon as "docker"
    volumes:
      - docker-certs-ca:/certs/ca                # CA certs generated by DinD
      - docker-certs-client:/certs/client        # Client certs for Jenkins
      - docker-cache:/var/lib/docker             # Docker image/layer cache
    healthcheck:
      test: ["CMD", "docker", "info"]
      interval: 10s
      timeout: 5s
      retries: 5

  jenkins:
    # Build a custom Jenkins image that has the Docker CLI installed
    build:
      context: ./jenkins                         # <-- jenkins/Dockerfile installs docker.io
    container_name: jenkins
    user: root
    restart: unless-stopped
    environment:
      # Let the Docker CLI inside Jenkins talk to the DinD daemon via TLS
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
    networks:
      jenkins: {}
    ports:
      - "8080:8080"                              # Jenkins Web UI
      - "50000:50000"                            # (optional) inbound agents
    volumes:
      - jenkins-data:/var/jenkins_home           # Persist jobs/config/plugins
      - docker-certs-client:/certs/client:ro     # Read-only client TLS certs
    depends_on:
      dind:
        condition: service_healthy

networks:
  jenkins: {}

volumes:
  jenkins-data:
  docker-certs-ca:
  docker-certs-client:
  docker-cache:

